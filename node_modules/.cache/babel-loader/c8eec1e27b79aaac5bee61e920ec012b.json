{"ast":null,"code":"var _jsxFileName = \"/home/alexkiwi/projects/another-todo/src/pages/Todo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"../styles/Todo.css\";\nimport { NewInput } from \"../components/Input\";\nimport { ListItem } from \"../components/ListItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateId = Math.random().toString().slice(2);\nexport const Todo = () => {\n  _s();\n\n  const [todo, setTodo] = useState(\"\");\n  const [listItems, setListItems] = useState([]);\n\n  const handleAddItem = () => {\n    setListItems([{\n      id: generateId(),\n      value: todo,\n      enabled: true\n    }, ...listItems]);\n    setTodo(\"\");\n  };\n\n  const handleDisabled = idx => () => {\n    setListItems([...listItems.slice(0, idx), {\n      value: listItems[idx].value,\n      enabled: !listItems[idx].enabled\n    }, ...listItems.slice(idx + 1, listItems.length)]);\n  };\n\n  const handleDelete = idx => () => {\n    setListItems([...listItems.slice(0, idx), ...listItems.slice(idx + 1, listItems.length)]);\n  };\n\n  const handleEdit = (idx, newText) => {\n    setListItems([...listItems.slice(0, idx), {\n      value: newText,\n      enabled: listItems[idx].enabled\n    }, ...listItems.slice(idx + 1, listItems.length)]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contentWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"ToDo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewInput, {\n        value: todo,\n        onChange: setTodo,\n        onAdd: handleAddItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listWrapper\",\n        children: listItems.map((item, idx) => {\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            idx: idx,\n            className: listItems[idx].enabled ? \"listItemEnabled\" : \"listItemDisabled\",\n            item: item,\n            onItemChange: handleEdit //\n            ,\n            handleDisabled: handleDisabled(idx),\n            status: listItems[idx].enabled,\n            handleDelete: handleDelete(idx)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Todo, \"LeuvNnmrNrOwuWSkszULOP8cRfE=\");\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/alexkiwi/projects/another-todo/src/pages/Todo.jsx"],"names":["React","useState","NewInput","ListItem","generateId","Math","random","toString","slice","Todo","todo","setTodo","listItems","setListItems","handleAddItem","id","value","enabled","handleDisabled","idx","length","handleDelete","handleEdit","newText","map","item"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"../styles/Todo.css\";\n\nimport { NewInput } from \"../components/Input\";\nimport { ListItem } from \"../components/ListItem\";\n\nconst generateId = Math.random().toString().slice(2);\n\nexport const Todo = () => {\n  const [todo, setTodo] = useState(\"\");\n  const [listItems, setListItems] = useState([]);\n\n  const handleAddItem = () => {\n    setListItems([\n      { id: generateId(), value: todo, enabled: true },\n      ...listItems,\n    ]);\n    setTodo(\"\");\n  };\n\n  const handleDisabled = (idx) => () => {\n    setListItems([\n      ...listItems.slice(0, idx),\n      { value: listItems[idx].value, enabled: !listItems[idx].enabled },\n      ...listItems.slice(idx + 1, listItems.length),\n    ]);\n  };\n\n  const handleDelete = (idx) => () => {\n    setListItems([\n      ...listItems.slice(0, idx),\n      ...listItems.slice(idx + 1, listItems.length),\n    ]);\n  };\n\n  const handleEdit = (idx, newText) => {\n    setListItems([\n      ...listItems.slice(0, idx),\n      { value: newText, enabled: listItems[idx].enabled },\n      ...listItems.slice(idx + 1, listItems.length),\n    ]);\n  };\n\n  return (\n    <div className=\"todo\">\n      <div className=\"contentWrapper\">\n        <h1 className=\"title\">ToDo List</h1>\n        <NewInput value={todo} onChange={setTodo} onAdd={handleAddItem} />\n\n        <div className=\"listWrapper\">\n          {listItems.map((item, idx) => {\n            return (\n              <ListItem\n                key={item.id}\n                idx={idx}\n                className={\n                  listItems[idx].enabled\n                    ? \"listItemEnabled\"\n                    : \"listItemDisabled\"\n                }\n                item={item}\n                onItemChange={handleEdit}\n                //\n                handleDisabled={handleDisabled(idx)}\n                status={listItems[idx].enabled}\n                handleDelete={handleDelete(idx)}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
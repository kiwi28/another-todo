{"ast":null,"code":"var _jsxFileName = \"/home/alexkiwi/projects/another-todo/src/components/ListItem.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Buton } from \"./Buton\";\nimport \"../styles/ListItem.css\";\nimport { NewInput } from \"./Input\";\nimport { ReactComponent as EditIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/edit.svg\";\nimport { ReactComponent as DeleteIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/delete.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ListItem = ({\n  idx,\n  item,\n  status,\n  className,\n  onItemChange,\n  handleDelete,\n  handleDisabled\n}) => {\n  _s();\n\n  const [editedTodo, setEditedTodo] = useState(\"\");\n  const [isInEdit, setIsInEdit] = useState(false);\n\n  const toggleEdit = () => {\n    setIsInEdit(s => !s);\n    setEditedTodo(item.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containerLine\",\n    children: isInEdit ? /*#__PURE__*/_jsxDEV(NewInput, {\n      value: editedTodo,\n      onChange: setEditedTodo,\n      onAdd: () => {\n        onItemChange(idx, editedTodo);\n        setIsInEdit(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: handleDisabled,\n        className: className,\n        children: item.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), status && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Buton, {\n          onClick: toggleEdit,\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {\n            className: \"actionIcon edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Buton, {\n          onClick: handleDelete,\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n            className: \"actionIcon delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListItem, \"qzMhLX7kqOv+k/1q8+6c1I/1G7w=\");\n\n_c = ListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItem\");","map":{"version":3,"sources":["/home/alexkiwi/projects/another-todo/src/components/ListItem.jsx"],"names":["useState","Buton","NewInput","ListItem","idx","item","status","className","onItemChange","handleDelete","handleDisabled","editedTodo","setEditedTodo","isInEdit","setIsInEdit","toggleEdit","s","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,KAAT,QAAsB,SAAtB;AACA,OAAO,wBAAP;AACA,SAASC,QAAT,QAAyB,SAAzB;;;;;AAIA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AACvBC,EAAAA,GADuB;AAEvBC,EAAAA,IAFuB;AAGvBC,EAAAA,MAHuB;AAIvBC,EAAAA,SAJuB;AAKvBC,EAAAA,YALuB;AAMvBC,EAAAA,YANuB;AAOvBC,EAAAA;AAPuB,CAAD,KAQlB;AAAA;;AACJ,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMe,UAAU,GAAG,MAAM;AACvBD,IAAAA,WAAW,CAAEE,CAAD,IAAO,CAACA,CAAT,CAAX;AACAJ,IAAAA,aAAa,CAACP,IAAI,CAACY,KAAN,CAAb;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,cACGJ,QAAQ,gBACP,QAAC,QAAD;AACE,MAAA,KAAK,EAAEF,UADT;AAEE,MAAA,QAAQ,EAAEC,aAFZ;AAGE,MAAA,KAAK,EAAE,MAAM;AACXJ,QAAAA,YAAY,CAACJ,GAAD,EAAMO,UAAN,CAAZ;AACAG,QAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AANH;AAAA;AAAA;AAAA;AAAA,YADO,gBAUP;AAAA,8BACE;AAAK,QAAA,OAAO,EAAEJ,cAAd;AAA8B,QAAA,SAAS,EAAEH,SAAzC;AAAA,kBACGF,IAAI,CAACY;AADR;AAAA;AAAA;AAAA;AAAA,cADF,EAIGX,MAAM,iBACL;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,OAAO,EAAES,UAAhB;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,SAAS,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,KAAD;AAAO,UAAA,OAAO,EAAEN,YAAhB;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA,sBALJ;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAhDM;;GAAMN,Q;;KAAAA,Q","sourcesContent":["import { useState } from \"react\";\n\nimport { Buton } from \"./Buton\";\nimport \"../styles/ListItem.css\";\nimport { NewInput } from \"./Input\";\nimport { ReactComponent as EditIcon } from \"../images/edit.svg\";\nimport { ReactComponent as DeleteIcon } from \"../images/delete.svg\";\n\nexport const ListItem = ({\n  idx,\n  item,\n  status,\n  className,\n  onItemChange,\n  handleDelete,\n  handleDisabled,\n}) => {\n  const [editedTodo, setEditedTodo] = useState(\"\");\n  const [isInEdit, setIsInEdit] = useState(false);\n\n  const toggleEdit = () => {\n    setIsInEdit((s) => !s);\n    setEditedTodo(item.value);\n  };\n\n  return (\n    <div className=\"containerLine\">\n      {isInEdit ? (\n        <NewInput\n          value={editedTodo}\n          onChange={setEditedTodo}\n          onAdd={() => {\n            onItemChange(idx, editedTodo);\n            setIsInEdit(false);\n          }}\n        />\n      ) : (\n        <>\n          <div onClick={handleDisabled} className={className}>\n            {item.value}\n          </div>\n          {status && (\n            <>\n              <Buton onClick={toggleEdit}>\n                <EditIcon className=\"actionIcon edit\" />\n              </Buton>\n\n              <Buton onClick={handleDelete}>\n                <DeleteIcon className=\"actionIcon delete\" />\n              </Buton>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}